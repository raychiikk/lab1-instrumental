From 6dfbccfa04b86b3f73b3341a31f900094d0aacb0 Mon Sep 17 00:00:00 2001
From: raychiikk <cherhinetsyulia@gmail.com>
Date: Fri, 17 Oct 2025 12:29:15 +0300
Subject: [PATCH 1/8] added localStorage for testing

---
 src/hooks/tests/useTodos.test.js | 194 +++++++++++++++++++++++++++++++
 1 file changed, 194 insertions(+)
 create mode 100644 src/hooks/tests/useTodos.test.js

diff --git a/src/hooks/tests/useTodos.test.js b/src/hooks/tests/useTodos.test.js
new file mode 100644
index 0000000..27467f7
--- /dev/null
+++ b/src/hooks/tests/useTodos.test.js
@@ -0,0 +1,194 @@
+import { renderHook, act } from '@testing-library/react';
+import { describe, it, expect, beforeEach, vi } from 'vitest';
+import { useTodos } from '../useTodos';
+
+// Створення мок-об'єкта для імітації localStorage
+// Це необхідно для ізоляції тестів від реального браузерного середовища
+const localStorageMock = (() => {
+  let store = {}; // Внутрішнє сховище для даних
+return {
+    // Метод для отримання даних за ключем
+    getItem: (key) => store[key] || null,
+    // Метод для збереження даних (перетворюємо значення в рядок)
+    setItem: (key, value) => { store[key] = value.toString(); },
+    // Метод для видалення даних
+    removeItem: (key) => { delete store[key]; },
+    // Метод для повного очищення сховища
+    clear: () => { store = {}; }
+};
+})();
+
+// Замінюємо глобальний localStorage на наш мок-об'єкт
+// Це гарантує, що тести не впливатимуть на реальні дані браузера
+global.localStorage = localStorageMock;
+
+// Основний блок тестів для хука useTodos
+describe('useTodos', () => {
+  // Функція, яка виконується перед кожним тестом
+  // Забезпечує чистий стан для кожного тесту
+beforeEach(() => {
+    localStorage.clear();  // Очищаємо мокований localStorage
+    vi.clearAllMocks();    // Очищаємо всі моки Vitest
+});
+
+  // Тест: перевірка початкової ініціалізації хука
+it('ініціалізується з порожнім списком', () => {
+    // renderHook використовується для тестування React хуків
+    // Він рендерить хук у віртуальному середовищі
+    const { result } = renderHook(() => useTodos());
+    
+    // Перевіряємо, що обидва списки задач спочатку порожні
+    // todos - відфільтрований список, allTodos - всі задачі
+    expect(result.current.todos).toEqual([]);
+    expect(result.current.allTodos).toEqual([]);
+});
+
+  // Тест: перевірка додавання нової задачі
+it('додає нову задачу', () => {
+    const { result } = renderHook(() => useTodos());
+    
+    // act використовується для оновлення стану в React
+    // Всі операції, що змінюють стан, повинні бути обгорнуті в act
+    act(() => {
+    result.current.addTodo('Test task');
+    });
+
+    // Перевіряємо, що задача додалася до списку
+    expect(result.current.allTodos).toHaveLength(1);
+    // Перевіряємо, що текст задачі зберігся правильно
+    expect(result.current.allTodos[0].text).toBe('Test task');
+});
+
+  // Тест: перевірка перемикання статусу задачі (виконано/не виконано)
+it('перемикає статус задачі', () => {
+    const { result } = renderHook(() => useTodos());
+    
+    let todoId; // Змінна для зберігання ID створеної задачі
+    
+    // Створюємо нову задачу та зберігаємо її ID
+    act(() => {
+    const todo = result.current.addTodo('Test task');
+    todoId = todo.id;
+    });
+
+    // Перше перемикання - має змінити статус на true (виконано)
+    act(() => {
+    result.current.toggleTodo(todoId);
+    });
+
+    // Перевіряємо, що задача стала виконаною
+    expect(result.current.allTodos[0].completed).toBe(true);
+
+    // Друге перемикання - має повернути статус на false (не виконано)
+    act(() => {
+    result.current.toggleTodo(todoId);
+    });
+
+    // Перевіряємо, що задача знову стала невиконаною
+    expect(result.current.allTodos[0].completed).toBe(false);
+});
+
+  // Тест: перевірка видалення задачі
+it('видаляє задачу', () => {
+    const { result } = renderHook(() => useTodos());
+    
+    let todoId;
+    
+    // Створюємо задачу
+    act(() => {
+    const todo = result.current.addTodo('Test task');
+    todoId = todo.id;
+    });
+
+    // Перевіряємо, що задача дійсно додалася
+    expect(result.current.allTodos).toHaveLength(1);
+
+    // Видаляємо задачу
+    act(() => {
+    result.current.deleteTodo(todoId);
+    });
+
+    // Перевіряємо, що список став порожнім
+    expect(result.current.allTodos).toHaveLength(0);
+});
+
+  // Тест: перевірка роботи фільтрів (всі/активні/виконані)
+it('фільтрує задачі правильно', () => {
+    const { result } = renderHook(() => useTodos());
+    
+    let todoId1;
+    
+    // Створюємо дві задачі та одну з них позначаємо виконаною
+    act(() => {
+    const todo1 = result.current.addTodo('Task 1');
+    result.current.addTodo('Task 2');
+    todoId1 = todo1.id;
+      result.current.toggleTodo(todoId1); // Робимо першу задачу виконаною
+    });
+
+    // За замовчуванням має показувати всі задачі (2 задачі)
+    expect(result.current.todos).toHaveLength(2);
+
+    // Тестуємо фільтр "активні" (невиконані задачі)
+    act(() => {
+    result.current.setFilter('active');
+    });
+    // Має залишитися тільки одна активна задача
+    expect(result.current.todos).toHaveLength(1);
+    // Перевіряємо, що залишилася невиконана задача
+    expect(result.current.todos[0].completed).toBe(false);
+
+    // Тестуємо фільтр "виконані"
+    act(() => {
+    result.current.setFilter('completed');
+    });
+    // Має залишитися тільки одна виконана задача
+    expect(result.current.todos).toHaveLength(1);
+    // Перевіряємо, що залишилася виконана задача
+    expect(result.current.todos[0].completed).toBe(true);
+});
+
+  // Тест: перевірка збереження даних у localStorage
+it('зберігає задачі в localStorage', () => {
+    const { result } = renderHook(() => useTodos());
+    
+    // Додаємо задачу, що має зберегтися в localStorage
+    act(() => {
+    result.current.addTodo('Persistent task');
+    });
+
+    // Отримуємо дані з localStorage
+    const stored = localStorage.getItem('todos-app-data');
+    // Перевіряємо, що дані дійсно збереглися
+    expect(stored).toBeTruthy();
+    
+    // Парсимо збережені дані з JSON
+    const parsed = JSON.parse(stored);
+    // Перевіряємо кількість збережених задач
+    expect(parsed).toHaveLength(1);
+    // Перевіряємо коректність збереженого тексту задачі
+    expect(parsed[0].text).toBe('Persistent task');
+});
+
+  // Тест: перевірка завантаження даних з localStorage при ініціалізації
+it('завантажує задачі з localStorage при ініціалізації', () => {
+    // Створюємо тестові дані для localStorage
+    const testTodos = [{
+    id: 'test-1',
+    text: 'Stored task',
+    completed: false,
+    createdAt: Date.now()
+    }];
+    
+    // Імітуємо наявність даних в localStorage перед ініціалізацією хука
+    localStorage.setItem('todos-app-data', JSON.stringify(testTodos));
+
+    // Рендеримо хук - він має автоматично завантажити дані з localStorage
+    const { result } = renderHook(() => useTodos());
+    
+    // Перевіряємо, що задача завантажилася
+    expect(result.current.allTodos).toHaveLength(1);
+    // Перевіряємо коректність завантажених даних
+    expect(result.current.allTodos[0].text).toBe('Stored task');
+});
+});
\ No newline at end of file
-- 
2.49.0.windows.1


From b8ec3fd8f6782a392f241bfb614d9779c9ea5e13 Mon Sep 17 00:00:00 2001
From: raychiikk <cherhinetsyulia@gmail.com>
Date: Fri, 17 Oct 2025 12:31:32 +0300
Subject: [PATCH 2/8] added useTodos hooks with localStorage sync and CRUD
 logic

---
 src/hooks/useTodos.js | 84 +++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 84 insertions(+)
 create mode 100644 src/hooks/useTodos.js

diff --git a/src/hooks/useTodos.js b/src/hooks/useTodos.js
new file mode 100644
index 0000000..b0fc935
--- /dev/null
+++ b/src/hooks/useTodos.js
@@ -0,0 +1,84 @@
+import { useState, useEffect, useCallback } from 'react';
+import { createTodo, filterTodos, sortTodos } from '../utils/todoUtils';
+
+const STORAGE_KEY = 'todos-app-data';
+
+export const useTodos = () => {
+const [todos, setTodos] = useState([]);
+const [filter, setFilter] = useState('all');
+const [sortBy, setSortBy] = useState('date');
+
+  // Завантаження з localStorage при монтуванні
+useEffect(() => {
+    const stored = localStorage.getItem(STORAGE_KEY);
+    if (stored) {
+    try {
+        const parsed = JSON.parse(stored);
+        setTodos(parsed);
+    } catch (error) {
+        console.error('Failed to parse todos from localStorage', error);
+    }}}, []);
+
+  // Збереження в localStorage при зміні
+useEffect(() => {
+    if (todos.length > 0) {
+    localStorage.setItem(STORAGE_KEY, JSON.stringify(todos));
+    }
+}, [todos]);
+
+const addTodo = useCallback((text, options) => {
+    const newTodo = createTodo(text, options);
+    setTodos(prev => [newTodo, ...prev]);
+    return newTodo;
+}, []);
+
+const toggleTodo = useCallback((id) => {
+    setTodos(prev => 
+    prev.map(todo => 
+        todo.id === id 
+        ? { ...todo, completed: !todo.completed } 
+        : todo
+    )
+    );
+}, []);
+
+const deleteTodo = useCallback((id) => {
+    setTodos(prev => prev.filter(todo => todo.id !== id));
+}, []);
+
+const updateTodo = useCallback((id, updates) => {
+    setTodos(prev => 
+    prev.map(todo => 
+        todo.id === id 
+        ? { ...todo, ...updates } 
+        : todo
+    )
+    );
+}, []);
+
+const clearCompleted = useCallback(() => {
+    setTodos(prev => prev.filter(todo => !todo.completed));
+}, []);
+
+const clearAll = useCallback(() => {
+    setTodos([]);
+    localStorage.removeItem(STORAGE_KEY);
+}, []);
+
+const filteredAndSortedTodos = sortTodos(filterTodos(todos, filter), sortBy);
+
+return {
+    todos: filteredAndSortedTodos,
+    allTodos: todos,
+    filter,
+    setFilter,
+    sortBy,
+    setSortBy,
+    addTodo,
+    toggleTodo,
+    deleteTodo,
+    updateTodo,
+    clearCompleted,
+    clearAll
+};
+};
\ No newline at end of file
-- 
2.49.0.windows.1


From 83fb911063d2331182fe7e9748822ff224bcdf77 Mon Sep 17 00:00:00 2001
From: raychiikk <cherhinetsyulia@gmail.com>
Date: Fri, 17 Oct 2025 12:33:20 +0300
Subject: [PATCH 3/8] added the main functionality todoUtils

---
 src/utils/todoUtils.js | 94 ++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 94 insertions(+)
 create mode 100644 src/utils/todoUtils.js

diff --git a/src/utils/todoUtils.js b/src/utils/todoUtils.js
new file mode 100644
index 0000000..66703cf
--- /dev/null
+++ b/src/utils/todoUtils.js
@@ -0,0 +1,94 @@
+/**
+ * Генерує унікальний ID для задачі
+ */
+export const generateId = () => {
+    return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;
+};
+
+/**
+   * Валідує текст задачі
+   */
+export const validateTodoText = (text) => {
+    if (typeof text !== 'string') {
+    throw new Error('Todo text must be a string');
+    }
+    
+    const trimmed = text.trim();
+    
+    if (trimmed.length === 0) {
+    throw new Error('Todo text cannot be empty');
+    }
+    
+    if (trimmed.length > 200) {
+    throw new Error('Todo text is too long (max 200 characters)');
+    }
+    
+    return trimmed;
+};
+
+/**
+   * Фільтрує задачі за статусом
+   */
+export const filterTodos = (todos, filter) => {
+    switch (filter) {
+    case 'active':
+        return todos.filter(todo => !todo.completed);
+    case 'completed':
+        return todos.filter(todo => todo.completed);
+    case 'all':
+    default:
+        return todos;
+    }
+};
+
+/**
+   * Сортує задачі
+   */
+export const sortTodos = (todos, sortBy = 'date') => {
+    const todosCopy = [...todos];
+    
+    switch (sortBy) {
+    case 'date':
+        return todosCopy.sort((a, b) => b.createdAt - a.createdAt);
+    case 'alphabetical':
+        return todosCopy.sort((a, b) => a.text.localeCompare(b.text));
+    case 'priority':
+        const priorityOrder = { high: 0, medium: 1, low: 2 };
+        return todosCopy.sort((a, b) => {
+        return priorityOrder[a.priority || 'low'] - priorityOrder[b.priority || 'low'];
+        });
+    default:
+        return todosCopy;
+    }
+};
+
+/**
+   * Рахує статистику задач
+   */
+export const getTodoStats = (todos) => {
+    return {
+    total: todos.length,
+    completed: todos.filter(todo => todo.completed).length,
+    active: todos.filter(todo => !todo.completed).length,
+    completionRate: todos.length > 0 
+        ? Math.round((todos.filter(todo => todo.completed).length / todos.length) * 100) 
+        : 0
+    };
+};
+
+/**
+   * Створює нову задачу
+   */
+export const createTodo = (text, options = {}) => {
+    const validatedText = validateTodoText(text);
+    
+    return {
+    id: generateId(),
+    text: validatedText,
+    completed: false,
+    createdAt: Date.now(),
+    priority: options.priority || 'low',
+    dueDate: options.dueDate || null,
+    tags: options.tags || []
+    };
+};
\ No newline at end of file
-- 
2.49.0.windows.1


From 5bc041fefb839842e916649233a233876802e4ab Mon Sep 17 00:00:00 2001
From: raychiikk <cherhinetsyulia@gmail.com>
Date: Fri, 17 Oct 2025 12:34:12 +0300
Subject: [PATCH 4/8] added unit tests for todo utilities

---
 src/utils/tests/todoUtils.test.js | 114 ++++++++++++++++++++++++++++++
 1 file changed, 114 insertions(+)
 create mode 100644 src/utils/tests/todoUtils.test.js

diff --git a/src/utils/tests/todoUtils.test.js b/src/utils/tests/todoUtils.test.js
new file mode 100644
index 0000000..cc63574
--- /dev/null
+++ b/src/utils/tests/todoUtils.test.js
@@ -0,0 +1,114 @@
+import { describe, it, expect } from 'vitest';
+import {
+generateId,
+validateTodoText,
+filterTodos,
+sortTodos,
+getTodoStats,
+createTodo
+} from '../todoUtils';
+
+// Тестування функції генерації унікальних ID
+describe('generateId', () => {
+it('генерує унікальний ID', () => {
+    // Перевіряємо, що кожен виклик генерує унікальний ID
+    const id1 = generateId();
+    const id2 = generateId();
+    expect(id1).not.toBe(id2);
+});
+});
+
+// Тестування функції валідації тексту задачі
+describe('validateTodoText', () => {
+it('приймає валідний текст', () => {
+    // Перевіряємо, що нормальний текст проходить валідацію
+    const result = validateTodoText('Купити молоко');
+    expect(result).toBe('Купити молоко');
+});
+
+it('викидає помилку для порожнього тексту', () => {
+    // Перевіряємо, що порожній текст викликає помилку
+    expect(() => validateTodoText('')).toThrow('Todo text cannot be empty');
+});
+});
+
+// Тестування функції фільтрації задач
+describe('filterTodos', () => {
+  // Тестовий набір задач з різними статусами
+const todos = [
+    { id: '1', text: 'Task 1', completed: false },
+    { id: '2', text: 'Task 2', completed: true },
+    { id: '3', text: 'Task 3', completed: false }
+];
+
+it('повертає всі задачі для фільтру "all"', () => {
+    // Перевіряємо, що фільтр "all" повертає всі задачі
+    const result = filterTodos(todos, 'all');
+    expect(result).toHaveLength(3);
+});
+
+it('повертає тільки активні задачі', () => {
+    // Перевіряємо, що фільтр "active" повертає тільки невиконані задачі
+    const result = filterTodos(todos, 'active');
+    expect(result).toHaveLength(2);
+});
+});
+
+// Тестування функції сортування задач
+describe('sortTodos', () => {
+  // Тестовий набір задач з різними датами та пріоритетами
+const todos = [
+    { id: '1', text: 'Sabrina', createdAt: 1000, priority: 'low' },
+    { id: '2', text: 'Oksana', createdAt: 3000, priority: 'high' },
+    { id: '3', text: 'Mike', createdAt: 2000, priority: 'medium' }
+];
+
+it('сортує за датою створення', () => {
+    // Перевіряємо сортування за датою (новіші перші)
+    const result = sortTodos(todos, 'date');
+    expect(result[0].id).toBe('2'); // Задача з найновішою датою має бути першою
+});
+
+it('сортує за пріоритетом', () => {
+    // Перевіряємо сортування за пріоритетом (high > medium > low)
+    const result = sortTodos(todos, 'priority');
+    expect(result[0].priority).toBe('high'); // Задача з найвищим пріоритетом має бути першою
+});
+});
+
+// Тестування функції розрахунку статистики
+describe('getTodoStats', () => {
+it('рахує статистику коректно', () => {
+    // Перевіряємо правильність розрахунку статистики для змішаного списку
+    const todos = [
+    { completed: true },
+    { completed: false },
+    { completed: true }
+    ];
+    const stats = getTodoStats(todos);
+    expect(stats.total).toBe(3);     // Загальна кількість
+    expect(stats.completed).toBe(2); // Кількість виконаних
+});
+
+it('повертає нульову статистику для порожнього списку', () => {
+    // Перевіряємо обробку порожнього списку задач
+    const stats = getTodoStats([]);
+    expect(stats.total).toBe(0); // Повинно бути 0 задач
+});
+});
+
+// Тестування функції створення нової задачі
+describe('createTodo', () => {
+it('створює задачу з базовими полями', () => {
+    // Перевіряємо створення задачі з обов'язковими полями
+    const todo = createTodo('Test task');
+    expect(todo.text).toBe('Test task');      // Текст задачі
+    expect(todo.completed).toBe(false);       // Статус "не виконано"
+    expect(todo.priority).toBe('low');        // Пріоритет за замовчуванням
+});
+
+it('валідує текст при створенні', () => {
+    // Перевіряємо, що порожній текст викликає помилку валідації
+    expect(() => createTodo('')).toThrow();
+});
+});
\ No newline at end of file
-- 
2.49.0.windows.1


From 05a17010ed7e0d236b307804dbcd930f855e81e4 Mon Sep 17 00:00:00 2001
From: raychiikk <cherhinetsyulia@gmail.com>
Date: Fri, 17 Oct 2025 12:35:08 +0300
Subject: [PATCH 5/8] added design for our project

---
 src/App.css | 277 +++++++++++++++++++++++++++++++++++++++++++++++-----
 1 file changed, 250 insertions(+), 27 deletions(-)

diff --git a/src/App.css b/src/App.css
index b9d355d..61f6ee0 100644
--- a/src/App.css
+++ b/src/App.css
@@ -1,42 +1,265 @@
-#root {
-  max-width: 1280px;
-  margin: 0 auto;
+* {
+  margin: 0;
+  padding: 0;
+  box-sizing: border-box;
+}
+
+body {
+  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
+    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
+    sans-serif;
+  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
+  min-height: 100vh;
+  padding: 2rem;
+  display: flex;
+  justify-content: center;
+  align-items: center;
+}
+
+.app {
+  display: flex;
+  justify-content: center;
+  align-items: center;
+  width: 100%;
+}
+
+.container {
+  background: white;
+  border-radius: 12px;
+  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
+  max-width: 800px;
+  width: 100%;
   padding: 2rem;
+}
+
+.header {
   text-align: center;
+  margin-bottom: 2rem;
+}
+
+.header h1 {
+  font-size: 2.5rem;
+  color: #333;
+  margin-bottom: 1rem;
 }
 
-.logo {
-  height: 6em;
-  padding: 1.5em;
-  will-change: filter;
-  transition: filter 300ms;
+.stats {
+  display: flex;
+  justify-content: center;
+  gap: 1.5rem;
+  flex-wrap: wrap;
 }
-.logo:hover {
-  filter: drop-shadow(0 0 2em #646cffaa);
+
+.stats span {
+  background: #f0f0f0;
+  padding: 0.5rem 1rem;
+  border-radius: 20px;
+  font-size: 0.9rem;
+  color: #666;
 }
-.logo.react:hover {
-  filter: drop-shadow(0 0 2em #61dafbaa);
+
+.add-form {
+  display: flex;
+  gap: 0.5rem;
+  margin-bottom: 1.5rem;
 }
 
-@keyframes logo-spin {
-  from {
-    transform: rotate(0deg);
-  }
-  to {
-    transform: rotate(360deg);
-  }
+.controls {
+  display: flex;
+  gap: 0.5rem;
+  margin-bottom: 1.5rem;
+  flex-wrap: wrap;
+  align-items: center;
 }
 
-@media (prefers-reduced-motion: no-preference) {
-  a:nth-of-type(2) .logo {
-    animation: logo-spin infinite 20s linear;
-  }
+.filter-buttons {
+  display: flex;
+  gap: 0.25rem;
+}
+
+.input {
+  flex: 1;
+  padding: 0.75rem;
+  border: 2px solid #e0e0e0;
+  border-radius: 8px;
+  font-size: 1rem;
+  transition: border-color 0.3s;
+}
+
+.input:focus {
+  outline: none;
+  border-color: #667eea;
+}
+
+.select {
+  padding: 0.75rem;
+  border: 2px solid #e0e0e0;
+  border-radius: 8px;
+  font-size: 1rem;
+  background: white;
+  cursor: pointer;
+  transition: border-color 0.3s;
+}
+
+.select:focus {
+  outline: none;
+  border-color: #667eea;
+}
+
+.btn {
+  padding: 0.75rem 1.5rem;
+  border: none;
+  border-radius: 8px;
+  font-size: 1rem;
+  cursor: pointer;
+  transition: all 0.3s;
+  background: #f0f0f0;
+  color: #333;
+}
+
+.btn:hover {
+  background: #e0e0e0;
+}
+
+.btn-primary {
+  background: #667eea;
+  color: white;
+}
+
+.btn-primary:hover {
+  background: #5568d3;
+}
+
+.btn-active {
+  background: #667eea;
+  color: white;
+}
+
+.btn-danger {
+  background: #ef4444;
+  color: white;
+}
+
+.btn-danger:hover {
+  background: #dc2626;
+}
+
+.btn-success {
+  background: #10b981;
+  color: white;
+}
+
+.btn-success:hover {
+  background: #059669;
+}
+
+.btn-small {
+  padding: 0.4rem 0.8rem;
+  font-size: 0.9rem;
+}
+
+.todo-list {
+  list-style: none;
+  margin-bottom: 1.5rem;
+}
+
+.todo-item {
+  display: flex;
+  align-items: center;
+  gap: 1rem;
+  padding: 1rem;
+  border: 2px solid #e0e0e0;
+  border-radius: 8px;
+  margin-bottom: 0.5rem;
+  transition: all 0.3s;
+}
+
+.todo-item:hover {
+  border-color: #667eea;
+  box-shadow: 0 2px 8px rgba(102, 126, 234, 0.1);
+}
+
+.todo-item.completed {
+  opacity: 0.6;
+  background: #f9fafb;
+}
+
+.checkbox {
+  width: 20px;
+  height: 20px;
+  cursor: pointer;
 }
 
-.card {
-  padding: 2em;
+.todo-text {
+  flex: 1;
+  font-size: 1rem;
+  color: #333;
 }
 
-.read-the-docs {
-  color: #888;
+.todo-item.completed .todo-text {
+  text-decoration: line-through;
+  color: #999;
 }
+
+.priority-badge {
+  font-size: 1.2rem;
+}
+
+.todo-actions {
+  display: flex;
+  gap: 0.5rem;
+}
+
+.edit-form {
+  display: flex;
+  gap: 0.5rem;
+  flex: 1;
+}
+
+.empty-message {
+  text-align: center;
+  padding: 3rem;
+  color: #999;
+  font-size: 1.1rem;
+}
+
+.footer-actions {
+  display: flex;
+  justify-content: center;
+  gap: 1rem;
+  padding-top: 1rem;
+  border-top: 2px solid #e0e0e0;
+}
+
+@media (max-width: 640px) {
+  body {
+    padding: 1rem;
+  }
+  
+  .add-form {
+    flex-direction: column;
+  }
+
+  .controls {
+    flex-direction: column;
+  }
+
+  .filter-buttons {
+    width: 100%;
+    justify-content: space-between;
+  }
+
+  .stats {
+    flex-direction: column;
+    gap: 0.5rem;
+  }
+
+  .todo-item {
+    flex-wrap: wrap;
+  }
+
+  .todo-actions {
+    width: 100%;
+    justify-content: flex-end;
+  }
+}
\ No newline at end of file
-- 
2.49.0.windows.1


From 6ac03bba2049a13187628f842d45ae4a3730ec26 Mon Sep 17 00:00:00 2001
From: raychiikk <cherhinetsyulia@gmail.com>
Date: Fri, 17 Oct 2025 12:36:07 +0300
Subject: [PATCH 6/8] the main HTML structure of the project has been added

---
 src/App.jsx | 233 +++++++++++++++++++++++++++++++++++++++++++++-------
 1 file changed, 205 insertions(+), 28 deletions(-)

diff --git a/src/App.jsx b/src/App.jsx
index f67355a..6f61a1f 100644
--- a/src/App.jsx
+++ b/src/App.jsx
@@ -1,35 +1,212 @@
-import { useState } from 'react'
-import reactLogo from './assets/react.svg'
-import viteLogo from '/vite.svg'
-import './App.css'
+import { useState } from 'react';
+import { useTodos } from './hooks/useTodos';
+import { getTodoStats } from './utils/todoUtils';
+import './App.css';
 
 function App() {
-  const [count, setCount] = useState(0)
+  const {
+    todos,
+    allTodos,
+    filter,
+    setFilter,
+    sortBy,
+    setSortBy,
+    addTodo,
+    toggleTodo,
+    deleteTodo,
+    updateTodo,
+    clearCompleted,
+    clearAll
+  } = useTodos();
+
+  const [inputValue, setInputValue] = useState('');
+  const [priority, setPriority] = useState('low');
+  const [editingId, setEditingId] = useState(null);
+  const [editText, setEditText] = useState('');
+
+  const stats = getTodoStats(allTodos);
+
+  const handleSubmit = (e) => {
+    e.preventDefault();
+    if (inputValue.trim()) {
+      try {
+        addTodo(inputValue, { priority });
+        setInputValue('');
+        setPriority('low');
+      } catch (error) {
+        alert(error.message);
+      }
+    }
+  };
+
+  const handleEdit = (todo) => {
+    setEditingId(todo.id);
+    setEditText(todo.text);
+  };
+
+  const handleSaveEdit = (id) => {
+    if (editText.trim()) {
+      try {
+        updateTodo(id, { text: editText.trim() });
+        setEditingId(null);
+        setEditText('');
+      } catch (error) {
+        alert(error.message);
+      }
+    }
+  };
+
+  const handleCancelEdit = () => {
+    setEditingId(null);
+    setEditText('');
+  };
 
   return (
-    <>
-      <div>
-        <a href="https://vite.dev" target="_blank">
-          <img src={viteLogo} className="logo" alt="Vite logo" />
-        </a>
-        <a href="https://react.dev" target="_blank">
-          <img src={reactLogo} className="logo react" alt="React logo" />
-        </a>
-      </div>
-      <h1>Vite + React</h1>
-      <div className="card">
-        <button onClick={() => setCount((count) => count + 1)}>
-          count is {count}
-        </button>
-        <p>
-          Edit <code>src/App.jsx</code> and save to test HMR
-        </p>
+    <div className="app">
+      <div className="container">
+        <header className="header">
+          <h1>📝 Todo List</h1>
+          <div className="stats">
+            <span>Всього: {stats.total}</span>
+            <span>Активних: {stats.active}</span>
+            <span>Виконано: {stats.completed}</span>
+            <span>Прогрес: {stats.completionRate}%</span>
+          </div>
+        </header>
+
+        <form onSubmit={handleSubmit} className="add-form">
+          <input
+            type="text"
+            value={inputValue}
+            onChange={(e) => setInputValue(e.target.value)}
+            placeholder="Додати нову задачу..."
+            className="input"
+          />
+          <select 
+            value={priority} 
+            onChange={(e) => setPriority(e.target.value)}
+            className="select"
+          >
+            <option value="low">Низький</option>
+            <option value="medium">Середній</option>
+            <option value="high">Високий</option>
+          </select>
+          <button type="submit" className="btn btn-primary">
+            Додати
+          </button>
+        </form>
+
+        <div className="controls">
+          <div className="filter-buttons">
+            <button
+              onClick={() => setFilter('all')}
+              className={`btn ${filter === 'all' ? 'btn-active' : ''}`}
+            >
+              Всі
+            </button>
+            <button
+              onClick={() => setFilter('active')}
+              className={`btn ${filter === 'active' ? 'btn-active' : ''}`}
+            >
+              Активні
+            </button>
+            <button
+              onClick={() => setFilter('completed')}
+              className={`btn ${filter === 'completed' ? 'btn-active' : ''}`}
+            >
+              Виконані
+            </button>
+          </div>
+
+          <select
+            value={sortBy}
+            onChange={(e) => setSortBy(e.target.value)}
+            className="select"
+          >
+            <option value="date">За датою</option>
+            <option value="alphabetical">За алфавітом</option>
+            <option value="priority">За пріоритетом</option>
+          </select>
+        </div>
+
+        <ul className="todo-list">
+          {todos.length === 0 ? (
+            <li className="empty-message">
+              Немає задач
+            </li>
+          ) : (
+            todos.map((todo) => (
+              <li key={todo.id} className={`todo-item ${todo.completed ? 'completed' : ''}`}>
+                <input
+                  type="checkbox"
+                  checked={todo.completed}
+                  onChange={() => toggleTodo(todo.id)}
+                  className="checkbox"
+                />
+                
+                {editingId === todo.id ? (
+                  <div className="edit-form">
+                    <input
+                      type="text"
+                      value={editText}
+                      onChange={(e) => setEditText(e.target.value)}
+                      className="input"
+                      autoFocus
+                    />
+                    <button
+                      onClick={() => handleSaveEdit(todo.id)}
+                      className="btn btn-small btn-success"
+                    >
+                      Зберегти
+                    </button>
+                    <button
+                      onClick={handleCancelEdit}
+                      className="btn btn-small"
+                    >
+                      Скасувати
+                    </button>
+                  </div>
+                ) : (
+                  <>
+                    <span className="todo-text">{todo.text}</span>
+                    <span className={`priority-badge priority-${todo.priority}`}>
+                      {todo.priority === 'high' ? '🔴' : todo.priority === 'medium' ? '🟡' : '🟢'}
+                    </span>
+                    <div className="todo-actions">
+                      <button
+                        onClick={() => handleEdit(todo)}
+                        className="btn btn-small"
+                        disabled={todo.completed}
+                      >
+                        ✏️
+                      </button>
+                      <button
+                        onClick={() => deleteTodo(todo.id)}
+                        className="btn btn-small btn-danger"
+                      >
+                        🗑️
+                      </button>
+                    </div>
+                  </>
+                )}
+              </li>
+            ))
+          )}
+        </ul>
+
+        {allTodos.length > 0 && (
+          <div className="footer-actions">
+            <button onClick={clearCompleted} className="btn">
+              Очистити виконані
+            </button>
+            <button onClick={clearAll} className="btn btn-danger">
+              Очистити все
+            </button>
+          </div>
+        )}
       </div>
-      <p className="read-the-docs">
-        Click on the Vite and React logos to learn more
-      </p>
-    </>
-  )
+    </div>
+  );
 }
 
-export default App
+export default App;
-- 
2.49.0.windows.1


From 625202436a053f7a90eb53037a00d32cb9b69e24 Mon Sep 17 00:00:00 2001
From: raychiikk <cherhinetsyulia@gmail.com>
Date: Fri, 17 Oct 2025 12:36:44 +0300
Subject: [PATCH 7/8] added final description of lab work

---
 README.md | 67 +++++++++++++++++++++++++++++++++++++++++++++++--------
 1 file changed, 58 insertions(+), 9 deletions(-)

diff --git a/README.md b/README.md
index 18bc70e..5aa2306 100644
--- a/README.md
+++ b/README.md
@@ -1,16 +1,65 @@
-# React + Vite
+# Todo List Application
 
-This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.
+A modern React Todo List application with comprehensive unit testing.
 
-Currently, two official plugins are available:
+## Features
 
-- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react) uses [Babel](https://babeljs.io/) (or [oxc](https://oxc.rs) when used in [rolldown-vite](https://vite.dev/guide/rolldown)) for Fast Refresh
-- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh
+* ✅ Add, edit, delete todos
+* ✅ Filter by status (all / active / completed)
+* ✅ Sort by date, alphabetical order, priority
+* ✅ Priority levels (high / medium / low)
+* ✅ Statistics and completion rate
+* ✅ Local storage persistence
+* ✅ Fully responsive design
+* ✅ Comprehensive unit tests
 
-## React Compiler
+## Tech Stack
 
-The React Compiler is not enabled on this template because of its impact on dev & build performances. To add it, see [this documentation](https://react.dev/learn/react-compiler/installation).
+* React 18
+* Vitest (for unit testing)
+* CSS3 with modern layout
 
-## Expanding the ESLint configuration
+## Project Structure
 
-If you are developing a production application, we recommend using TypeScript with type-aware lint rules enabled. Check out the [TS template](https://github.com/vitejs/vite/tree/main/packages/create-vite/template-react-ts) for information on how to integrate TypeScript and [`typescript-eslint`](https://typescript-eslint.io) in your project.
+```
+src/
+├── hooks/
+│   ├── useTodos.js            # Custom hook for todo management
+│   └── tests/
+│       └── useTodos.test.js   # Tests for custom hook
+├── utils/
+│   ├── todoUtils.js           # Utility functions
+│   └── tests/
+│       └── todoUtils.test.js  # Tests for utilities
+└── App.jsx                    # Main component
+```
+
+## Testing
+
+The project includes comprehensive unit tests:
+
+* **18 passing tests** covering all major functionality
+* Tests for utility functions (filtering, sorting, validation)
+* Tests for custom React hook
+* Mocked localStorage for testing
+
+### Test Breakdown
+
+* **todoUtils.test.js**: 10 tests for utility functions
+* **useTodos.test.js**: 7 tests for React custom hook
+
+## Getting Started
+
+```bash
+npm install
+npm run dev
+npm test
+```
+
+## Test Coverage
+
+* ✅ Todo creation and validation
+* ✅ Filtering and sorting
+* ✅ Statistics calculation
+* ✅ Local storage operations
+* ✅ User interactions
\ No newline at end of file
-- 
2.49.0.windows.1


From 7aeafe4852431fbdd4d1671fea56121efbb5ebe6 Mon Sep 17 00:00:00 2001
From: raychiikk <cherhinetsyulia@gmail.com>
Date: Fri, 17 Oct 2025 12:37:17 +0300
Subject: [PATCH 8/8] was deleted

---
 src/assets/react.svg | 1 -
 1 file changed, 1 deletion(-)
 delete mode 100644 src/assets/react.svg

diff --git a/src/assets/react.svg b/src/assets/react.svg
deleted file mode 100644
index 6c87de9..0000000
--- a/src/assets/react.svg
+++ /dev/null
@@ -1 +0,0 @@
-<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="35.93" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 228"><path fill="#00D8FF" d="M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z"></path></svg>
\ No newline at end of file
-- 
2.49.0.windows.1

